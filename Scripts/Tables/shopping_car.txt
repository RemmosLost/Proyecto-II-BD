CREATE TABLE `per`.`shopping_car` (
  `id_shopping_car` INT NOT NULL AUTO_INCREMENT,
  `id_user` VARCHAR(45) NOT NULL,
  `id_purchase` INT NOT NULL,
  `creation_date` DATE NULL,
  `creation_user` VARCHAR(45) NULL,
  `last_update_date` DATE NULL,
  `last_update_user` VARCHAR(45) NULL,
  PRIMARY KEY (`id_shopping_car`),
  UNIQUE INDEX `id_shopping_car_UNIQUE` (`id_shopping_car` ASC) VISIBLE,
  INDEX `fk_shop_car_purchase_idx` (`id_purchase` ASC) VISIBLE,
  INDEX `fk_shop_car_user_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_shop_car_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `per`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shop_car_purchase`
    FOREIGN KEY (`id_purchase`)
    REFERENCES `per`.`purchase` (`id_purchase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = 'Table that stores shopping_car  information.';
DROP TRIGGER IF EXISTS `per`.`shopping_car_BEFORE_INSERT`;

DELIMITER $$
USE `per`$$
CREATE DEFINER = CURRENT_USER TRIGGER `per`.`shopping_car_BEFORE_INSERT` BEFORE INSERT ON `shopping_car` FOR EACH ROW
BEGIN
IF NEW.creation_date IS NULL OR NEW.creation_user IS NULL THEN 
        SET NEW.creation_date = CURDATE();
        SET NEW.creation_user = SYSTEM_USER();
    END IF;
END$$
DELIMITER ;
DROP TRIGGER IF EXISTS `per`.`shopping_car_BEFORE_UPDATE`;

DELIMITER $$
USE `per`$$
CREATE DEFINER = CURRENT_USER TRIGGER `per`.`shopping_car_BEFORE_UPDATE` BEFORE UPDATE ON `shopping_car` FOR EACH ROW
BEGIN
IF NEW.last_update_date IS NULL OR NEW.last_update_user IS NULL THEN
        SET NEW.last_update_date = CURDATE();
        SET NEW.last_update_user = SYSTEM_USER();
END IF;
END$$
DELIMITER ;
